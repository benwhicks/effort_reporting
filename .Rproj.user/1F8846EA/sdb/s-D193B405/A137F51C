{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Effort Report - Sample\"\noutput: html_document\n---\n\n``` {r setup, echo = FALSE}\nknitr::opts_chunk$set(echo = FALSE)\n```\n\n``` {r}\n# importing data\nd <- read.csv('sample.effort.csv')\n\n# report based on student id number - this will be automated for mail out\nstudent.id <- 1000\n\n# Get full name based on student.id\nstudent.name <- \"Jen Eric\"\n```\n\n```{r}\n\neffortPlot.bysubject <- function(d) {\n  # Recieves a long data frame and returns a ggplot historgram\n  # Their must be the following fields:\n  #  -- Score : The score (1 to 5, 5 being Outstanding)\n  #  -- Subject : The subject (such as 'English')\n  #  -- Source : Either Student or Teacher\n  #  -- Category : One of Diligence, Behaviour or Effort\n  require(ggplot2)\n  \n  # Setting up reording of subjects -- this needs to be refined \n  # to include Y12 subjects\n  slist <- c(\"English\",\n             \"Mathematics\",\n             \"Science\",\n             \"History\",\n             \"Geography\",\n             \"Cornerstone\",\n             \"Music\",\n             \"French\",\n             \"Design & Technology\",\n             \"Media Technology\",\n             \"Food Technology\",\n             \"Grahpics Technology\",\n             \"Visual Art\",\n             \"PDHPE\")\n  subject.orders <- data.frame(Subject = slist, Order = seq(length(slist)))\n  d <- merge(d, subject.orders)\n  forOrder <- unique(data.frame(Subject = d$Subject, Order = d$Order))\n  forOrder <- forOrder[order(forOrder$Order),]\n  facetOrder <- forOrder$Subject\n  d$Subject <- factor(d$Subject, levels = facetOrder)\n  \n  d$Category <- factor(d$Category, levels = c(\"Diligence\", \"Engagement\", \"Behaviour\"))\n  \n  # Creating the actual plot\n  g <- ggplot(data = d, \n              aes(x = Category, y = Score, fill = Source)) + \n    geom_bar(stat = \"identity\", position = \"dodge\", width = 0.6) +\n    facet_grid(Subject ~ .) +\n    scale_y_discrete(name = \"Effort rating\", \n                     limits = c(\"Unsatisfactory\", \"Fair\", \"Good\", \"Very Good\", \"Outstanding\")) +\n    scale_fill_brewer(palette = \"Paired\", type = \"div\")\n  return(g)\n}\n```\n\n\n### Effort report for `r student.name`\n\n\n``` {r}\nd <- d[d$Student.ID == student.id,]\nsuppressPackageStartupMessages(library(ggplot2))\nsuppressPackageStartupMessages(library(plotly))\nggplotly(effortPlot.bysubject(d))\n```",
    "created" : 1477974696410.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2831628624",
    "id" : "A137F51C",
    "lastKnownWriteTime" : 1478131493,
    "last_content_update" : 1478131493336,
    "path" : "~/Documents/Data Analysis/R/Effort Reporting/sample-effort-report.Rmd",
    "project_path" : "sample-effort-report.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}