d$Category <- factor(d$Category, levels = c("Diligence", "Engagement", "Behaviour"))
# Creating the actual plot
g <- ggplot(data = d,
aes(x = Category, y = Score, fill = Source)) +
geom_bar(stat = "identity", position = "dodge", width = 0.6) +
ggtitle(ctitle) +
guides(fill = guide_legend(title = NULL)) +
theme(text = element_text(family = "Helvetica", size = 10)) +
facet_grid(Subject ~ .) +
coord_cartesian(ylim = c(0,5)) +
scale_y_discrete(name = "Effort rating",
limits = c("Unsatisfactory", "Fair", "Good", "Very Good", "Outstanding")) +
scale_fill_manual(values = c("skyblue","navy"))
return(g)
}
?scale_y_discrete
effortPlot(efdat[efdat$Student.ID == 1032,])
effortPlot <- function(d, ctitle = "Chart title") {
# Recieves a long data frame and returns a ggplot historgram
# Their must be the following fields:
#  -- Score : The score (1 to 5, 5 being Outstanding)
#  -- Subject : The subject (such as 'English')
#  -- Source : Either Student or Teacher
#  -- Category : One of Diligence, Behaviour or Effort
require(ggplot2)
# Setting up reording of subjects -- this needs to be refined
# to include Y12 subjects
slist <- c("English",
"Mathematics",
"Science",
"History",
"Geography",
"Cornerstone",
"Music",
"French",
"Design & Technology",
"Media Technology",
"Food Technology",
"Grahpics Technology",
"Visual Art",
"PDHPE")
subject.orders <- data.frame(Subject = slist, Order = seq(length(slist)))
d <- merge(d, subject.orders)
forOrder <- unique(data.frame(Subject = d$Subject, Order = d$Order))
forOrder <- forOrder[order(forOrder$Order),]
facetOrder <- forOrder$Subject
d$Subject <- factor(d$Subject, levels = facetOrder)
d$Category <- factor(d$Category, levels = c("Diligence", "Engagement", "Behaviour"))
# Creating the actual plot
g <- ggplot(data = d,
aes(x = Category, y = Score, fill = Source)) +
geom_bar(stat = "identity", position = "dodge", width = 0.6) +
ggtitle(ctitle) +
guides(fill = guide_legend(title = NULL)) +
theme(text = element_text(family = "Helvetica", size = 10)) +
facet_grid(Subject ~ .) +
coord_cartesian(ylim = c(1,5)) +
scale_y_discrete(name = "Effort rating",
limits = c("Unsatisfactory", "Fair", "Good", "Very Good", "Outstanding")) +
scale_fill_manual(values = c("skyblue","navy"))
return(g)
}
effortPlot(efdat[efdat$Student.ID == 1032,])
# Creating the actual plot
effortPlot <- function(d, ctitle = "Chart title") {
# Recieves a long data frame and returns a ggplot historgram
# Their must be the following fields:
#  -- Score : The score (1 to 5, 5 being Outstanding)
#  -- Subject : The subject (such as 'English')
#  -- Source : Either Student or Teacher
#  -- Category : One of Diligence, Behaviour or Effort
require(ggplot2)
# Setting up reording of subjects -- this needs to be refined
# to include Y12 subjects
slist <- c("English",
"Mathematics",
"Science",
"History",
"Geography",
"Cornerstone",
"Music",
"French",
"Design & Technology",
"Media Technology",
"Food Technology",
"Grahpics Technology",
"Visual Art",
"PDHPE")
subject.orders <- data.frame(Subject = slist, Order = seq(length(slist)))
d <- merge(d, subject.orders)
forOrder <- unique(data.frame(Subject = d$Subject, Order = d$Order))
forOrder <- forOrder[order(forOrder$Order),]
facetOrder <- forOrder$Subject
d$Subject <- factor(d$Subject, levels = facetOrder)
d$Category <- factor(d$Category, levels = c("Diligence", "Engagement", "Behaviour"))
# Creating the actual plot
g <- ggplot(data = d,
aes(x = Category, y = Score, fill = Source)) +
geom_bar(stat = "identity", position = "dodge", width = 0.6) +
ggtitle(ctitle) +
guides(fill = guide_legend(title = NULL)) +
theme(text = element_text(family = "Helvetica", size = 10)) +
facet_grid(Subject ~ .) +
coord_cartesian(ylim = c(1,5)) +
scale_y_discrete(name = "Effort rating",
limits = c("Unsatisfactory", "Fair", "Good", "Very Good", "Outstanding")) +
scale_fill_manual(values = c("skyblue","navy"))
return(g)
}
d
effortPlot(d)
ggplotly(effortPlot(d))
library(dplyr)
?group_by
group_by(d, Subject)
summarise(d, mean(Score))
summarise(group_by(d, Source, Category), mean(Score))
overallEffortPlot <- function(d, ctitle = "Overall Effort") {
require(dplyr)
d <- summarise(group_by(d, Source, Category), mean(Score))
names(d) <- c("Source", "Category", "Score")
# creating the plot
g <- ggplot(data = d, aes(x = Category, y = Score, fill = Source)) +
geom_bar(stat = "identity", position = "dodge", width = 0.6) +
ggtitle(ctitle) +
guides(fill = guide_legend(title = NULL)) +
theme(text = element_text(family = "Helvetica", size = 10)) +
coord_cartesian(ylim = c(1,5)) +
scale_y_discrete(name = "Effort rating",
limits = c("Unsatisfactory", "Fair", "Good", "Very Good", "Outstanding")) +
scale_fill_manual(values = c("skyblue","navy"))
return(g)
}
overallEffortPlot(d)
?render
install.packages('mailR')
?mailR
library(mailR)
?dir.exists
list.dirs()
if !dir.exists("reports"):
dir.create("reports")
# Creates a directory called 'reports' if it does not already exist
if !(dir.exists("reports")):
dir.create("reports")
dir.exists("reports")
if !(dir.exists("reports")) {dir.create("reports")}
?!
?not
if (!dir.exists("reports")) {dir.create("reports")}
list.dirs()
View(efdat)
efdat$Student.ID
unique(efdat$Student.ID)
names(efdat)
xlsMerge <- function(dir = getwd(), sheet.index = 1, colRange = 1:11) {
### Merges all xls, and xlsx files in the folder into one data frame
require(xlsx)
files <- list.files(path = dir, full.names = T)
files <- files[grep(".xls*", files)]
# Exiting if no files
if (length(files) == 0) {
return("No xls or xlsx files in directory")
}
df <- read.xlsx(files[[1]], sheetIndex = sheet.index, colIndex = colRange)
for (f in files) {
df.add <- read.xlsx(f, sheetIndex = sheet.index, colIndex = colRange)
df <- merge(df, df.add,all = T)
}
#df <- aggregate(df, by = list(df$), max, na.rm = T)
return(df)
}
dir
t.dir <- "/Users/benhicks/Documents/Data Analysis/Data-Oxley/Effort Reporting/2016 T4 teacher data"
list.files(t.dir)
t.dir <- "/Users/benhicks/Documents/Data Analysis/Data-Oxley/Effort Reporting/2016 T4 teacher data/"
list.files(t.dir)
t.dir <- "/Users/benhicks/Documents/Data Analysis/Data-Oxley/Effort Reporting/2016T4 teacher data/"
list.files(t.dir)
teacher.dat <- xlsMerge(t.dir)
View(teacher.dat)
t.flat <- aggregate(teacher.dat, max, na.rm = T)
t.flat <- aggregate(teacher.dat, FUN = max, na.rm = T)
t.flat <- aggregate(teacher.dat, by = names(teacher.dat), FUN = max, na.rm = T)
t.flat <- aggregate(teacher.dat, by = list(names(teacher.dat)), FUN = max, na.rm = T)
t.flat <- aggregate(teacher.dat, by = list(teacher.dat$Student.code, teacher.dat$Class.code), FUN = max, na.rm = T)
library(plyr)
?plyr
summarise(teacher.dat)
aggregate(Diligence + Engagement + Behaviour ~ Teacher.code + Student.code + Class.code, data = teacher.dat)
aggregate(Diligence + Engagement + Behaviour ~ Teacher.code + Student.code + Class.code, data = teacher.dat, FUN = "mean", na.rm = T)
simp <- aggregate(Diligence + Engagement + Behaviour ~ Teacher.code + Student.code + Class.code, data = teacher.dat, FUN = "mean", na.rm = T)
View(simp)
simp <- aggregate(Diligence + Engagement + Behaviour ~ Teacher.code + Student.code + Class.code, data = teacher.dat, FUN = max, na.rm = T)
t.done <- unique(simp$Teacher.code)
t.all <- unique(teacher.dat$Teacher.code)
t.done
t.all
t.done <- complete.cases(teacher.dat)$Teacher.code
complete.cases(teacher.dat)
t.done <- teacher.dat[complete.cases(teacher.dat),]$Teacher.code
t.done <- unique(teacher.dat[complete.cases(teacher.dat),]$Teacher.code)
t.all <- unique(teacher.dat$Teacher.code)
t.done
t.all
t.done
complete.cases(teacher.dat)
comp <- teacher.dat[complete.cases(teacher.dat)]
comp <- teacher.dat[complete.cases(teacher.dat),]
comp
View(comp)
unique(comp$Teacher.code)
View(teacher.dat)
library(dplyr)
?intersect
distinct(teacher.dat)
?distinct
?aggregate
aggregate(cbind(Diligence, Engagement, Behaviour) ~ ., data = teacher.dat)
aggregate(cbind(Diligence, Engagement, Behaviour) ~ ., data = teacher.dat, max, na.rm = T)
trim <- aggregate(cbind(Diligence, Engagement, Behaviour) ~ ., data = teacher.dat, max, na.rm = T)
View(trim)
unique(trim$Teacher.code)
View(teacher.dat)
unique(teacher.dat$Teacher.code)
dplyr::setdiff(unique(teacher.dat$Teacher.code),unique(trim$Teacher.code))
unique(teacher.dat$Subject)
datdir <- "/Users/benhicks/Documents/Data Analysis/Data-Oxley/Effort Reporting"
efdatfile <- paste0(datdir, "/2016T4 Y12 effort data.xlsx")
teacher.dat.folder <- paste0("datdir", "/2016T4 teacher data")
datdir <- "/Users/benhicks/Documents/Data Analysis/Data-Oxley/Effort Reporting"
efdatfile <- paste0(datdir, "/2016T4 Y12 effort data.xlsx")
teacher.dat.folder <- paste0("datdir", "/2016T4 teacher data")
xlsMerge <- function(dir = getwd(), sheet.index = 1, colRange = 1:11) {
### Merges all xls, and xlsx files in the folder into one data frame
require(xlsx)
files <- list.files(path = dir, full.names = T)
files <- files[grep(".xls*", files)]
# Exiting if no files
if (length(files) == 0) {
return("No xls or xlsx files in directory")
}
df <- read.xlsx(files[[1]], sheetIndex = sheet.index, colIndex = colRange)
for (f in files) {
df.add <- read.xlsx(f, sheetIndex = sheet.index, colIndex = colRange)
df <- merge(df, df.add,all = T)
}
#df <- aggregate(df, by = list(df$), max, na.rm = T)
return(df)
}
teacher.dat <- xlsMerge(teacher.dat.folder)
datdir <- "/Users/benhicks/Documents/Data Analysis/Data-Oxley/Effort Reporting"
efdatfile <- paste0(datdir, "/2016T4 Y12 effort data.xlsx")
teacher.dat.folder <- paste0("datdir", "/2016T4 teacher data/")
xlsMerge <- function(dir = getwd(), sheet.index = 1, colRange = 1:11) {
### Merges all xls, and xlsx files in the folder into one data frame
require(xlsx)
files <- list.files(path = dir, full.names = T)
files <- files[grep(".xls*", files)]
# Exiting if no files
if (length(files) == 0) {
return("No xls or xlsx files in directory")
}
df <- read.xlsx(files[[1]], sheetIndex = sheet.index, colIndex = colRange)
for (f in files) {
df.add <- read.xlsx(f, sheetIndex = sheet.index, colIndex = colRange)
df <- merge(df, df.add,all = T)
}
#df <- aggregate(df, by = list(df$), max, na.rm = T)
return(df)
}
teacher.dat <- xlsMerge(teacher.dat.folder)
list.files(teacher.dat.folder)
teacher.dat.folder
datdir <- "/Users/benhicks/Documents/Data Analysis/Data-Oxley/Effort Reporting"
efdatfile <- paste0(datdir, "/2016T4 Y12 effort data.xlsx")
teacher.dat.folder <- paste0(datdir, "/2016T4 teacher data/")
xlsMerge <- function(dir = getwd(), sheet.index = 1, colRange = 1:11) {
### Merges all xls, and xlsx files in the folder into one data frame
require(xlsx)
files <- list.files(path = dir, full.names = T)
files <- files[grep(".xls*", files)]
# Exiting if no files
if (length(files) == 0) {
return("No xls or xlsx files in directory")
}
df <- read.xlsx(files[[1]], sheetIndex = sheet.index, colIndex = colRange)
for (f in files) {
df.add <- read.xlsx(f, sheetIndex = sheet.index, colIndex = colRange)
df <- merge(df, df.add,all = T)
}
#df <- aggregate(df, by = list(df$), max, na.rm = T)
return(df)
}
list.files(teacher.dat.folder)
teacher.dat <- xlsMerge(teacher.dat.folder)
teacher.dat.complete <- teacher.dat[complete.cases(teacher.dat),]
View(teacher.dat.complete)
write.table(teacher.dat.complete, file = paste0(teacher.dat.folder,"all.teacher.data.csv"),sep = ",", row.names = F)
library(ggplot2)
library(tidyr)
?gather
names(teacher.dat)
test <- teacher.dat %>% gather(Student.code, Teacher.code, Subject, -Diligence, -Engagement, -Behaviour)
View(test)
test <- teacher.dat %>% gather(Diligence, Engagement, Behaviour)
test <- teacher.dat %>% gather(Diligence, Engagement, Behaviour, Student.code, Teacher.code, Subject)
test <- teacher.dat %>% gather(Score, Category, -Diligence, -Engagement, -Behaviour)
test <- teacher.dat %>% gather(Score, Category, -Student.code, -Teacher.code, -Subject, -Surname, -First.name, -Email, -Class.code)
test <- teacher.dat %>% gather(Score, Category, -Student.code, -Teacher.code, -Subject, -Surname, -First.name, -Email, -Class.code, -Teacher.name)
test <- teacher.dat %>% gather(key = )
test <- teacher.dat %>% gather(key = "Category", value = "Score", 7:9)
length(teacher.dat)
test <- teacher.dat %>% gather(key = "Category", value = "Score", 9:11)
test <- teacher.dat %>% gather(key = "Category", value = "Score", c(Diligence,Engagement,Behaviour))
?subset
effortMergeData <- function(studentData, teacherData) {
require(tidyr)
sdat <- studentData %>% gather("Category", "Score",
c(Diligence, Engagement, Behaviour),
na.rm = TRUE)
sdat <- data.frame(sdat, Source = "Student")
tdat <- teacherData %>% gather("Category", "Score",
c(Diligence, Engagement, Behaviour),
na.rm = TRUE)
tdat <- data.frame(tdat, Source = "Teacher")
merged.df <- rbind(tdat, sdat)
merged.df <- subset(merged.df, select = c(Student.code,
Teacher.code,
Subject,
Source,
Category,
Score))
return(merged.df)
}
View(teacher.dat)
datdir <- "/Users/benhicks/Documents/Data Analysis/Data-Oxley/Effort Reporting"
efdatfile <- paste0(datdir, "/2016T4 Y12 effort data.xlsx")
teacher.dat.folder <- paste0(datdir, "/2016T4 teacher data/")
student.dat.file <- paste0(datdir,"2016T4 Y12 student effort data.csv")
teacher.dat.file <- paste0(datdir,"2016T4 Y12 teacher effort data.csv")
student.dat <- read.csv(student.dat.file)
# the following needs to be merged and then outputed
teacher.dat <- read.csv(teacher.dat.file)
student.dat.file
datdir <- "/Users/benhicks/Documents/Data Analysis/Data-Oxley/Effort Reporting"
efdatfile <- paste0(datdir, "/2016T4 Y12 effort data.xlsx")
teacher.dat.folder <- paste0(datdir, "/2016T4 teacher data/")
student.dat.file <- paste0(datdir,"/2016T4 Y12 student effort data.csv")
teacher.dat.file <- paste0(datdir,"/2016T4 Y12 teacher effort data.csv")
student.dat <- read.csv(student.dat.file)
# the following needs to be merged and then outputed
teacher.dat <- read.csv(teacher.dat.file)
View(student.dat)
datdir <- "/Users/benhicks/Documents/Data Analysis/Data-Oxley/Effort Reporting"
efdatfile <- paste0(datdir, "/2016T4 Y12 effort data.xlsx")
teacher.dat.folder <- paste0(datdir, "/2016T4 teacher data/")
student.dat.file <- paste0(datdir,"/2016T4 Y12 student effort data.csv")
teacher.dat.file <- paste0(datdir,"/2016T4 Y12 teacher effort data.csv")
student.dat <- read.csv(student.dat.file)
# the following needs to be merged and then outputed
teacher.dat <- read.csv(teacher.dat.file)
effortMergeData <- function(studentData, teacherData) {
require(tidyr)
sdat <- studentData %>% gather("Category", "Score",
c(Diligence, Engagement, Behaviour),
na.rm = TRUE)
sdat <- data.frame(sdat, Source = "Student")
tdat <- teacherData %>% gather("Category", "Score",
c(Diligence, Engagement, Behaviour),
na.rm = TRUE)
tdat <- data.frame(tdat, Source = "Teacher")
merged.df <- rbind(tdat, sdat)
merged.df <- subset(merged.df, select = c(Student.code,
Teacher.code,
Subject,
Source,
Category,
Score))
return(merged.df)
}
xlsMerge <- function(dir = getwd(), sheet.index = 1, colRange = 1:11) {
### Merges all xls, and xlsx files in the folder into one data frame
require(xlsx)
files <- list.files(path = dir, full.names = T)
files <- files[grep(".xls*", files)]
# Exiting if no files
if (length(files) == 0) {
return("No xls or xlsx files in directory")
}
df <- read.xlsx(files[[1]], sheetIndex = sheet.index, colIndex = colRange)
for (f in files) {
df.add <- read.xlsx(f, sheetIndex = sheet.index, colIndex = colRange)
df <- merge(df, df.add,all = T)
}
#df <- aggregate(df, by = list(df$), max, na.rm = T)
return(df)
}
effort.data <- effortMergeData(teacherData = teacher.dat, studentData = student.dat)
names(teacher.dat)
names(student.dat)
datdir <- "/Users/benhicks/Documents/Data Analysis/Data-Oxley/Effort Reporting"
efdatfile <- paste0(datdir, "/2016T4 Y12 effort data.xlsx")
teacher.dat.folder <- paste0(datdir, "/2016T4 teacher data/")
student.dat.file <- paste0(datdir,"/2016T4 Y12 student effort data.csv")
teacher.dat.file <- paste0(datdir,"/2016T4 Y12 teacher effort data.csv")
student.dat <- read.csv(student.dat.file)
# the following needs to be merged and then outputed
teacher.dat <- read.csv(teacher.dat.file)
effort.data <- effortMergeData(teacherData = teacher.dat, studentData = student.dat)
View(effort.data)
effortPlot <- function(d, ctitle = "Chart title") {
# Recieves a long data frame and returns a ggplot historgram
# Their must be the following fields:
#  -- Score : The score (1 to 5, 5 being Outstanding)
#  -- Subject : The subject (such as 'English')
#  -- Source : Either Student or Teacher
#  -- Category : One of Diligence, Behaviour or Effort
require(ggplot2)
# Setting up reording of subjects - more may need to be added as the system is run
slist <- c("English","English Standard", "English Advanced", "English Extension 1", "English Extension 2",
"Mathematics", "Mathematics General", "Mathemataics Extension 1", "Mathematics Extension 2",
"Science", "Biology", "Chemistry", "Physics",
"History", "History Ancient", "History Modern", "History Extension",
"Geography", "Economics", "Legal Studies", "Business Studies",
"Cornerstone",
"Music", "Music 1 & 2",
"French", "French Continuers",
"Design and Technology", "Design & Technology", "Engineering Studies",
"Media Technology",
"Food Technology",
"Grahpics Technology",
"Visual Arts",
"Drama",
"PDHPE",
"Distance Education", "TVET")
subject.orders <- data.frame(Subject = slist, Order = seq(length(slist)))
d <- merge(d, subject.orders)
forOrder <- unique(data.frame(Subject = d$Subject, Order = d$Order))
forOrder <- forOrder[order(forOrder$Order),]
facetOrder <- forOrder$Subject
d$Subject <- factor(d$Subject, levels = facetOrder)
d$Category <- factor(d$Category, levels = c("Diligence", "Engagement", "Behaviour"))
# Creating the actual plot
g <- ggplot(data = d,
aes(x = Category, y = Score, fill = Source)) +
geom_bar(stat = "identity", position = "dodge", width = 0.6) +
ggtitle(ctitle) +
guides(fill = guide_legend(title = NULL)) +
theme(text = element_text(size = 10)) +
facet_grid(Subject ~ .) +
coord_cartesian(ylim = c(1,5)) +
scale_y_discrete(name = "Effort rating",
limits = c("Unsatisfactory", "Fair", "Good", "Very Good", "Outstanding")) +
scale_fill_manual(values = c("skyblue","navy"))
return(g)
}
overallEffortPlot <- function(d, ctitle = "Overall Effort") {
require(dplyr)
d <- summarise(group_by(d, Source, Category), mean(Score))
names(d) <- c("Source", "Category", "Score")
d$Category <- factor(d$Category, levels = c("Diligence", "Engagement", "Behaviour"))
# creating the plot
g <- ggplot(data = d, aes(x = Category, y = Score, fill = Source)) +
geom_bar(stat = "identity", position = "dodge", width = 0.6) +
ggtitle(ctitle) +
guides(fill = guide_legend(title = NULL)) +
theme(text = element_text(size = 10)) +
coord_cartesian(ylim = c(1,5)) +
scale_y_discrete(name = "Effort rating",
limits = c("Unsatisfactory", "Fair", "Good", "Very Good", "Outstanding")) +
scale_fill_manual(values = c("skyblue","navy"))
return(g)
}
effortPlot(effort.data[effort.data$Student.code==1971,])
overallEffortPlot(effort.data[effort.data$Student.code==1971,])
overallEffortPlot(effort.data)
g <- ggplot(data = effort.data, aes(x = Category, y = Score, fill = Source)) + geom_point() + geom_jitter(width = 0.3)
g
g <- ggplot(data = effort.data, aes(x = Category, y = Score, color = Source)) + geom_point() + geom_jitter(width = 0.3)
g
g <- ggplot(data = effort.data, aes(x = Category, y = Score, color = Source)) + geom_point(alpha = 0.3) + geom_jitter(width = 0.3)
g
g <- ggplot(data = effort.data, aes(x = Category, y = Score, color = Source)) + geom_point(alpha = 0.1) + geom_jitter(width = 0.3)
g
g <- ggplot(data = effort.data, aes(x = Category, y = Score, color = Source)) + geom_point(alpha = 0.1) + geom_jitter(width = 0.5)
g
g <- ggplot(data = effort.data, aes(x = Category, y = Score, color = Source)) + geom_point(alpha = 0.1) + geom_jitter(alpha = 0.2)
g
g <- ggplot(data = effort.data, aes(x = Category, y = Score, color = Source)) + geom_point() + geom_jitter(alpha = 0.2)
g
g <- ggplot(data = effort.data, aes(x = Category, y = Score, color = Source)) + geom_point() + geom_jitter(alpha = 0.2) + facet_wrap(~ Subject)
g
datdir <- "/Users/benhicks/Documents/Data Analysis/Data-Oxley/Effort Reporting"
efdatfile <- paste0(datdir, "/2016T4 Y12 effort data.xlsx")
teacher.dat.folder <- paste0(datdir, "/2016T4 teacher data/")
student.dat.file <- paste0(datdir,"/2016T4 Y12 student effort data.csv")
teacher.dat.file <- paste0(datdir,"/2016T4 Y12 teacher effort data.csv")
student.dat <- read.csv(student.dat.file)
# the following needs to be merged and then outputed
teacher.dat <- read.csv(teacher.dat.file)
effort.data <- effortMergeData(student.dat, teacher.dat)
g <- ggplot(data = effort.data, aes(x = Category, y = Score, color = Source)) + geom_point() + geom_jitter(alpha = 0.2) + facet_wrap(~ Subject)
g
g <- ggplot(data = effort.data, aes(x = Category, y = Score, color = Source)) + geom_dotplot() + geom_jitter(alpha = 0.2) + facet_wrap(~ Subject)
g
g <- ggplot(data = effort.data, aes(x = Category, y = Score, color = Source)) + geom_jitter(alpha = 0.2) + facet_wrap(~ Subject)
g
g <- ggplot(data = effort.data, aes(x = Category, y = Score, color = Source)) + geom_jitter(alpha = 0.3) + facet_wrap(~ Subject)
g
g <- ggplot(data = effort.data, aes(x = Category, y = Score, color = Source)) + geom_jitter(alpha = 0.5, width = 0.3) + facet_wrap(~ Subject)
g
