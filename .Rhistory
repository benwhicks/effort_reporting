mailBody <- paste0("Dear ", s.name,",\n\n",
mail_studentBody,
"\nRegards,\nBen Hicks")
mailR::send.mail(from = "<octemp@oxley.nsw.edu.au>",
to = mailTo,
cc = mailCc,
bcc = c("<effort.grade@oxley.nsw.edu.au>"),
subject = mailSubject,
body = mailBody,
smtp = list(host.name = "mail.oxley.nsw.edu.au",
user.name = "octemp",
passwd = "[t3mP1522]"),
attach.files = studentFilePath,
authenticate = TRUE,
send = TRUE)
}
print(paste0("\nProgress at: ",which(student.numbers == ID)/length(student.numbers)))
}
knitr::opts_chunk$set(echo = TRUE)
effcat <- 'Diligence'
library(tufte)
# invalidate cache when the tufte version changes
knitr::opts_chunk$set(tidy = FALSE,  cache.extra = packageVersion('tufte'))
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
options(htmltools.dir.version = FALSE)
suppressWarnings(suppressPackageStartupMessages(library(ggplot2)))
suppressWarnings(suppressPackageStartupMessages(library(ggthemes)))
suppressWarnings(suppressPackageStartupMessages(library(dplyr)))
suppressWarnings(suppressPackageStartupMessages(library(tidyr)))
# Setting paths
datdir <- "/Users/benhicks/Documents/Data Analysis/Data-Oxley/Effort Data/2018 Term 2/"
effort.path <- paste0(datdir, "2018 Term 2 Effort Data.csv")
edumate.data.path <- paste0(datdir, "edumate_student_data_180530.csv")
# Getting the data
effort.data <- read.csv(effort.path)
student.info <- read.csv(edumate.data.path)
student.info <- plyr::rename(student.info,c("Student.."="Student.code",
"Email.Address"="Student.email",
"Firstname.Lastname"="Student.name",
"Tutor...Roll.Class"="Tutor.group",
"Carers...Parents..REPORTS..Email"="Reports.email"))
houses <- c("Dobell","Durack","Florey","Mawson","Monash","Oodgeroo")
house_colours <- c("#33CC33","#6600CC","#DDDD00","#0099FF","#CC0000","#FF9900")
house_colours_alt <- c("#338833","#550088","#999900","#0055BB","#880000","#BB5500")
pastEffortPath <- paste0(datdir,"Past Effort Data/")
old_effort_files <- list.files(pastEffortPath, pattern = "*.csv", full.names = T)
past.effort.data <- do.call(rbind,lapply(old_effort_files, read.csv))
ednames <- c("Student.code","Subject","Score","Category","Source","Class.code","Teacher.code","Date")
past.effort.data$Date <- as.Date(past.effort.data$Date)
past.effort.data <- past.effort.data[,names(past.effort.data) %in% ednames]
effort.data <- effort.data[,names(effort.data) %in% ednames]
effort.data <- unique(effort.data)
# Merging data
all.effort.data <- rbind(past.effort.data, effort.data)
# Tidying data types
all.effort.data$Student.code <- as.factor(all.effort.data$Student.code)
all.effort.data$Category <- factor(all.effort.data$Category, levels = c("Diligence", "Engagement","Behaviour"))
dates <- sort(unique(all.effort.data$Date))
last4dates <- dates[min(1,length(dates)-1):length(dates)]
t1 <- dates[length(dates)]
t0 <- dates[length(dates)-1]
df.means <- all.effort.data %>% group_by(Student.code, Date, Category, Source) %>% summarise(Score = mean(Score))
df.teacher <- df.means[df.means$Source == "Teacher",]
df.teacher$Source <- NULL
df.teacher <- df.teacher %>% spread(key = Category, value = Score)
# Changing 'effort' data to copy of single category
df.teacher$Effort <- df.teacher[,effcat]
df.house.summary <- merge(df.teacher, student.info[,c("Student.code","Student.name","House","Form","Gender")])
df.house.summary <- df.house.summary[df.house.summary$House %in% houses,]
df.cohort.percentiles <- df.house.summary %>% group_by(Form, Date) %>% mutate(pr = 100*percent_rank(Effort))
names(df.house.summary)
head(df.house.summary)
# Changing 'effort' data to copy of single category
df.teacher$Effort <- df.teacher$`effcat`
effcat <- 'Diligence'
df.teacher$`effcat`
df.teacher[,effcat ]
df.teacher[,c(effcat) ]
df.teacher[,names(df.teacher) %in% effcat]
df.teacher$Diligence
df.teacher`$`effcat
effcat
df.teacher[effcat]
df.teacher[[effcat]]
df.teacher$Effort <- df.teacher[[effcat]]
df.house.summary <- merge(df.teacher, student.info[,c("Student.code","Student.name","House","Form","Gender")])
df.house.summary <- df.house.summary[df.house.summary$House %in% houses,]
df.cohort.percentiles <- df.house.summary %>% group_by(Form, Date) %>% mutate(pr = 100*percent_rank(Effort))
df.cohort.percentiles$pr <- round(df.cohort.percentiles$pr, 1)
df.cohort.percentiles <- df.cohort.percentiles[df.cohort.percentiles$Date >= t0, c("Student.code","Date","pr")]
df.cohort.percentiles <- df.cohort.percentiles %>% spread(key = Date, value = pr)
names(df.cohort.percentiles) <- c("Student.code", "t0", "t1")
df.cohort.percentiles <- df.cohort.percentiles %>% mutate(P.Change = paste0(t0, " to ", t1) )
df.cohort.percentiles$t1 <- NULL
df.cohort.percentiles$t0 <- NULL
names(enrolmentData)
names(student.info)
names(edumateData)
newEffortUpload <- merge(edumateData, student.info, all.x = T)
dim(newEffortUpload)
head(newEffortUpload)
newEffortUpload <- merge(enrolmentData, student.info, all.x = T)
names(newEffortUpload)
dim(newEffortUpload)
head(newEffortUpload)
# Set up
source("effort.functions.R")
datdir <- "/Users/benhicks/Documents/Data Analysis/Data-Oxley/Effort Data/2018 Term 2/"
effort.survey.date <- as.Date("2018-06-04")
edumate.enrolment.path <- paste0(datdir,"edumate_enrolment_export_20180530.csv")
past.effort.path <- paste0(datdir, "Past Effort Data/")
edumate.data.path <- paste0(datdir, "edumate_student_data_180530.csv")
student.data.path <- paste0(datdir, "student_responses_09.json")
teacher.data.path <- paste0(datdir, "teacher_responses_10.json")
teacher.code.email.path <- paste0(datdir, "teacherCodeAndEmail.csv")
##### Cleaning functions #####
getEnrolmentData <- function(enrolment.path, student.info, teacher.code.email) {
df <- read.csv(enrolment.path, col.names = c("Form", "Student.code", "RegNum", "Firstname", "Surname", "Student.email", "Class", "Teacher.title", "Teacher.firstname", "Teacher.surname", "Teacher.email", "Class.code"))
df <- merge(df, student.info, all.x = T)
df$Teacher.email <- tolower(df$Teacher.email)
teacher.code.email$Teacher.email <- tolower(teacher.code.email$Teacher.email)
df <- merge(df, teacher.code.email, all.x = T)
# creating teacher name
df$Teacher.name <- paste(df$Teacher.firstname, df$Teacher.surname)
# Converting 'class' to 'subject' by removing fixed characters
df$Subject <- gsub("Year ", "", df$Class)
df$Subject <- gsub("\\s[A-Z]$", "", df$Subject)
df$Subject <- gsub("^[0-9]\\s", "", df$Subject)
df$Subject <- gsub("^[0-9][0-9]\\s", "", df$Subject)
# extracting class year
df$Class.year <- as.numeric(gsub("[A-z]","", substr(df$Class.code, start = 1, stop = 2)))
# extracting form year
df$Year <- as.numeric(substr(df$Form, 11, 12))
return(df)
}
makeGoogleScriptUpload <- function(enrolmentData) {
df <- plyr::rename(enrolmentData, c("Student.code" = "student_code",
"Subject" = "subject",
"Firstname" = "student_firstname",
"Surname" = "student_surname",
"Year" = "student_year",
"Student.email" = "student_email",
"Class.code" = "class_code",
"Class.year" = "class_year",
"Teacher.code" = "teacher_code",
"Teacher.name" = "teacher_name"
))
return(df)
}
makeEffortTrackingUpload <- function(enrolmentData) {
# Needs the following:
# stuff
# will need to take 2 data frames / files - enrolment and student info
}
######################################################
# Reading csv data
edumateData <- read.csv(edumate.data.path, col.names = c("Student.code", "Student.email", "Firstname","Lastname","Student.name", "Sort.name","House","Gender","Form","Tutor.group","Reports.email"))
studentInfo <- edumateData[,c("Student.code","Student.name","House","Form","Tutor.group")]
teacherCodeEmail <- read.csv(teacher.code.email.path, col.names = c("Teacher.code", "Teacher.email"))
enrolmentData <- getEnrolmentData(enrolment.path = edumate.enrolment.path, student.info = studentInfo, teacher.code.email = teacherCodeEmail)
############# Removing stupid stuff, adding missing stuff ##################
enrolmentData <- enrolmentData[!(enrolmentData$Class.code %in% c("12ENX2.L","12ENX2.X","11MAT.X","12MAT.X")),]
enrolmentData[enrolmentData$Teacher.name == "William Braddock", "Teacher.code"] <- "BRAD"
enrolmentData[enrolmentData$Teacher.name == "Iain Maitland", "Teacher.code"] <- "MAI"
############## Making google upload ##################
googleUpload <- makeGoogleScriptUpload(enrolmentData)
googleUpload <- googleUpload[order(googleUpload$student_surname, googleUpload$student_surname),]
write.csv(googleUpload, file = paste0(datdir, "googleUpload2018term2.csv"), row.names = F)
####################################
# Importing student data ###########
studentResponses <- jsonlite::fromJSON(student.data.path, flatten = T)
studentResponses <- plyr::rename(studentResponses, c("student_code"="Student.code",
"subject"="Subject",
"diligence"="Diligence",
"engagement"="Engagement",
"behaviour"="Behaviour",
"time_submitted"="Timestamp",
"empty"="empty"))
studentResponses$Student.code <- as.numeric(studentResponses$Student.code)
# Getting list of missing students
missingStudentData <- merge(studentResponses[studentResponses$empty == TRUE,],studentInfo, all.x = T)
missingStudentData <- subset(missingStudentData, select = c("Student.name","House","Form","Tutor.group","empty"))
missingStudentData <- missingStudentData[complete.cases(missingStudentData),]
# Working with complete student data
studentData <- studentResponses[!(is.na(studentResponses$Diligence)),]
studentData$empty <- NULL
studentData <- tidyJsonData(studentData)
studentData$Source <- "Student"
studentData <- merge(studentData, subset(enrolmentData, select = c("Student.code", "Subject", "Class.code","Teacher.code")), all.x = TRUE)
####################################
####################################
# Importing teacher data ###########
teacherResponses <- jsonlite::fromJSON(teacher.data.path, flatten = T)
missingTeacherData <- teacherResponses[is.na(teacherResponses$student),c("teacher_code","class_code")]
missingTeacherData <- missingTeacherData[missingTeacherData$teacher_code != "BULL",] # teacher ill, not completing this cycle
teacherResponses <- plyr::rename(teacherResponses, c("teacher_code"="Teacher.code",
"subject"="Subject",
"diligence"="Diligence",
"engagement"="Engagement",
"behaviour"="Behaviour",
"time_submitted"="Timestamp",
"empty"="empty",
"student"="Student.name",
"class"="Class.code",
"class_code"="Missing.class"))
teacherResponses <- merge(teacherResponses, studentInfo[,c("Student.name","Student.code")], all.x = TRUE)
# getting latest teacher responses, making "teacherResponses" df
teacherResponses <- teacherResponses[,!(names(teacherResponses) %in% c("Missing.class","empty"))]
df <- unique(data.frame("Student.code" = teacherResponses$Student.code,
"Class.code" = teacherResponses$Class.code,
"Teacher.code" = teacherResponses$Teacher.code,
"Diligence" = teacherResponses$Diligence,
"Engagement" = teacherResponses$Engagement,
"Behaviour" = teacherResponses$Behaviour,
"Timestamp" = teacherResponses$Timestamp))
teacherData <- tidyJsonData(df)
teacherData$Source <- "Teacher"
teacherData <- merge(teacherData, subset(enrolmentData, select = c("Student.code", "Subject", "Class.code","Teacher.code")), all.x = TRUE)
#####################################################
##               CLEANING                         ##
####################################################
######### Changing staff data #######################
teacherData[(teacherData$Student.code == 2066 & teacherData$Class.code == "12MAG2.O" & teacherData$Category == "Diligence"),]$Score <- 4
teacherData[(teacherData$Student.code == 7206 & teacherData$Class.code == "12MAG2.O" & teacherData$Category == "Diligence"),]$Score <- 2
# Ignoring the code above
effort.data <- unique(rbind(teacherData, studentData))
# effort.data[effort.data$Teacher.code == "NA","Teacher.code"] <- NA
# adding some useful fields with enrolment data
effort.data <- merge(effort.data, enrolmentData[,c("Class.code","Teacher.code","Student.code","Student.name")], all.x = T)
effort.data <- merge(effort.data, studentInfo[,c("Student.code","Student.name")],all.x = T)
effort.data$Date <- as.Date(effort.survey.date)
## fixing missing teacher code
effort.data[effort.data$Class.code %in% c("9BIG.L","10CRN.L","12MHI.O","11MHI.O","12MHI.X","11MHI.X"), "Teacher.code"] <- "BRAD"
effort.data[effort.data$Class.code == "12MAX2.O","Teacher.code"] <- "MAI"
## fixing subject names
effort.data[grepl("Chemistry",effort.data$Subject),"Subject"] <- "Chemistry"
effort.data[grepl("Legal",effort.data$Subject),"Subject"] <- "Legal Studies"
effort.data[grepl("CRN.",effort.data$Class.code),"Subject"] <- "Cornerstone"
effort.data[grepl("MHI.",effort.data$Class.code),"Subject"] <- "Modern History"
effort.data[grepl("BIG.",effort.data$Class.code),"Subject"] <- "Big History"
effort.data[grepl("12MAX2.",effort.data$Class.code),"Subject"] <- "Mathematics Extension 2"
## removing data not reported on
effort.data <- effort.data[!(effort.data$Student.code %in% c(21080,7072,23891)),]
effort.data <- effort.data[!(effort.data$Student.code == 2649 & effort.data$Subject == "French"),]
# Checking subject list
sub_miss <- setdiff(unique(effort.data$Subject), subject.order.list)
if (length(sub_miss) == 0) {
print('Subjects all in subject.order.list')
} else {
print('Subjects needed to be added to subject.order.list in effort.functions.R:')
print(sub_miss)
}
# Extrating old effort data for timelines
old_effort_files <- list.files(past.effort.path, pattern = "*.csv", full.names = T)
past.effort.data <- do.call(rbind,lapply(old_effort_files, read.csv))
past.effort.data$Date <- as.Date(past.effort.data$Date)
all.effort.data <- rbind(past.effort.data, effort.data)
effort.data.wide <- effLongToWide(effort.data)
#View(effort.data.wide[!(complete.cases(effort.data.wide)),])
names(enrolmentData)
newEnrolmentData <- merge(enrolmentData, studentInfo, all.x = T)
dim(newEnrolmentData)
head(newEnrolmentData)
dim(enrolmentData)
write.csv(newEnrolmentData, file = paste0(datdir, "NagyUpload2018T2.csv"), row.names = F)
write.csv(newEnrolmentData[enrolmentData$Form == 11,], file = paste0(datdir, "NagyUpload2018T2.csv"), row.names = F)
unique(enrolmentData$Form)
write.csv(newEnrolmentData[enrolmentData$Form == "2018 Year 11",], file = paste0(datdir, "NagyUpload2018T2.csv"), row.names = F)
write.csv(newEnrolmentData[enrolmentData$Year == 11,], file = paste0(datdir, "NagyUpload2018T2.csv"), row.names = F)
class(newEnrolmentData$Year)
write.csv(newEnrolmentData[newEnrolmentData$Year == 11,], file = paste0(datdir, "NagyUpload2018T2.csv"), row.names = F)
source("effort.functions.R")
datdir <- "/Users/benhicks/Documents/Data Analysis/Data-Oxley/Effort Data/2018 Term 2/"
effort.survey.date <- as.Date("2018-06-04")
enrolment.data.path <- paste0(datdir,"edumate_enrolment_export_20180530.csv")
past.effort.path <- paste0(datdir, "Past Effort Data/")
student.info.data.path <- paste0(datdir, "edumate_student_data_180530.csv")
teacher.code.email.path <- paste0(datdir, "teacherCodeAndEmail.csv")
enrdat <- read.csv(enrolment.data.path)
studat <- read.csv(student.data.path)
studat <- read.csv(student.info.data.path)
names(enrdat)
head(enrdat)
head(studat)
head(studat)
enrdat <- read.csv(enrolment.data.path)
enrdat <- plyr::rename(enrdat,c("FORM_RUN" = "Cohort",
"STUDENT_NUMBER" = "Student.ID",
"FIRSTNAME" = "Student.Firstname",
"SURNAME" = "Student.Lastname",
"EMAIL_ADDRESS" = "Student.Email",
"CLASS" = "Class",
"TEACHER_TITLE" = "Teacher.Title",
"TEACHER_SURNAME" = "Teacher.Lastname",
"TEACHER_EMAIL" = "Teacher.Email",
"class.code" = "Class.Code"))
studat <- read.csv(student.info.data.path)
studat <- plyr::rename(studat, c("Student.." = "Student.ID",
"Email.Address" = "Student.Email",
"Firstname" = "Student.Firstname",
"Lastname" = "Student.Lastname",
"Firstname.Lastname" = "Student.Name",
"LASTNAME.Firstname" = "Student.Sortname",
"House" = "House",
"Gender" = "Gender",
"Form" = "Cohort",
"Tutor...Roll.Class" = "Tutor.Group"))
outdat <- merge(enrdat, studat, all.x = T, by = "Student.ID")
head(outdat)
enrdat <- read.csv(enrolment.data.path)
enrdat <- plyr::rename(enrdat,c("FORM_RUN" = "Cohort",
"STUDENT_NUMBER" = "Student.ID",
"FIRSTNAME" = "Student.Firstname",
"SURNAME" = "Student.Lastname",
"EMAIL_ADDRESS" = "Student.Email",
"CLASS" = "Class",
"TEACHER_TITLE" = "Teacher.Title",
"TEACHER_SURNAME" = "Teacher.Lastname",
"TEACHER_EMAIL" = "Teacher.Email",
"class.code" = "Class.Code"))
studat <- read.csv(student.info.data.path)
studat <- plyr::rename(studat, c("Student.." = "Student.ID",
"Email.Address" = "Student.Email",
"Firstname" = "Student.Firstname",
"Lastname" = "Student.Lastname",
"Firstname.Lastname" = "Student.Name",
"LASTNAME.Firstname" = "Student.Sortname",
"House" = "House",
"Gender" = "Gender",
"Form" = "Cohort",
"Tutor...Roll.Class" = "Tutor.Group"))
outdat <- merge(enrdat, studat[,c("Student.ID", "Student.Name", "Student.Sortname","House","Gender","Tutor.Group")], all.x = T, by = "Student.ID")
head(outdat)
enrdat <- read.csv(enrolment.data.path)
enrdat <- plyr::rename(enrdat,c("FORM_RUN" = "Cohort",
"STUDENT_NUMBER" = "Student.ID",
"FIRSTNAME" = "Student.Firstname",
"SURNAME" = "Student.Lastname",
"EMAIL_ADDRESS" = "Student.Email",
"CLASS" = "Class",
"TEACHER_TITLE" = "Teacher.Title",
"TEACHER_FIRSTNAME" = "Teacher.Firstname",
"TEACHER_SURNAME" = "Teacher.Lastname",
"TEACHER_EMAIL" = "Teacher.Email",
"class.code" = "Class.Code"))
enrdat$REG_NUMBER <- NULL
studat <- read.csv(student.info.data.path)
studat <- plyr::rename(studat, c("Student.." = "Student.ID",
"Email.Address" = "Student.Email",
"Firstname" = "Student.Firstname",
"Lastname" = "Student.Lastname",
"Firstname.Lastname" = "Student.Name",
"LASTNAME.Firstname" = "Student.Sortname",
"House" = "House",
"Gender" = "Gender",
"Form" = "Cohort",
"Tutor...Roll.Class" = "Tutor.Group"))
outdat <- merge(enrdat, studat[,c("Student.ID", "Student.Name", "Student.Sortname","House","Gender","Tutor.Group")], all.x = T, by = "Student.ID")
head(outdat)
makeEffortTrackingUpload <- function(enrolment.data.path,
student.info.data.path,
output.file = "effort.tracking.upload.csv") {
enrdat <- read.csv(enrolment.data.path)
enrdat <- plyr::rename(enrdat,c("FORM_RUN" = "Cohort",
"STUDENT_NUMBER" = "Student.ID",
"FIRSTNAME" = "Student.Firstname",
"SURNAME" = "Student.Lastname",
"EMAIL_ADDRESS" = "Student.Email",
"CLASS" = "Class",
"TEACHER_TITLE" = "Teacher.Title",
"TEACHER_FIRSTNAME" = "Teacher.Firstname",
"TEACHER_SURNAME" = "Teacher.Lastname",
"TEACHER_EMAIL" = "Teacher.Email",
"class.code" = "Class.Code"))
enrdat$REG_NUMBER <- NULL
studat <- read.csv(student.info.data.path)
studat <- plyr::rename(studat, c("Student.." = "Student.ID",
"Email.Address" = "Student.Email",
"Firstname" = "Student.Firstname",
"Lastname" = "Student.Lastname",
"Firstname.Lastname" = "Student.Name",
"LASTNAME.Firstname" = "Student.Sortname",
"House" = "House",
"Gender" = "Gender",
"Form" = "Cohort",
"Tutor...Roll.Class" = "Tutor.Group"))
outdat <- merge(enrdat, studat[,c("Student.ID", "Student.Name", "Student.Sortname","House","Gender","Tutor.Group")], all.x = T, by = "Student.ID")
write.csv(outdat, file = output.file)
}
makeEffortTrackingUpload(enrolment.data.path = enrolment.data.path, student.info.data.path = student.info.data.path, output.file = paste0(datdir, "effort.tracking.upload.csv"))
outdat$Year <- gsub("[0-9]{4} Year ", "", outdat$Cohort)
unique(outdat$Year)
makeEffortTrackingUpload <- function(enrolment.data.path,
student.info.data.path,
output.file = "effort.tracking.upload.csv") {
enrdat <- read.csv(enrolment.data.path)
enrdat <- plyr::rename(enrdat,c("FORM_RUN" = "Cohort",
"STUDENT_NUMBER" = "Student.ID",
"FIRSTNAME" = "Student.Firstname",
"SURNAME" = "Student.Lastname",
"EMAIL_ADDRESS" = "Student.Email",
"CLASS" = "Class",
"TEACHER_TITLE" = "Teacher.Title",
"TEACHER_FIRSTNAME" = "Teacher.Firstname",
"TEACHER_SURNAME" = "Teacher.Lastname",
"TEACHER_EMAIL" = "Teacher.Email",
"class.code" = "Class.Code"))
enrdat$REG_NUMBER <- NULL
studat <- read.csv(student.info.data.path)
studat <- plyr::rename(studat, c("Student.." = "Student.ID",
"Email.Address" = "Student.Email",
"Firstname" = "Student.Firstname",
"Lastname" = "Student.Lastname",
"Firstname.Lastname" = "Student.Name",
"LASTNAME.Firstname" = "Student.Sortname",
"House" = "House",
"Gender" = "Gender",
"Form" = "Cohort",
"Tutor...Roll.Class" = "Tutor.Group"))
outdat <- merge(enrdat, studat[,c("Student.ID", "Student.Name", "Student.Sortname","House","Gender","Tutor.Group")], all.x = T, by = "Student.ID")
outdat$Year <- as.numeric(gsub("[0-9]{4} Year ", "", outdat$Cohort))
write.csv(outdat, file = output.file, row.names = FALSE)
}
makeEffortTrackingUpload(enrolment.data.path = enrolment.data.path, student.info.data.path = student.info.data.path, output.file = paste0(datdir, "effort.tracking.upload.csv"))
makeEffortTrackingUpload <- function(enrolment.data.path,
student.info.data.path,
output.file = "effort.tracking.upload.csv") {
enrdat <- read.csv(enrolment.data.path)
enrdat <- plyr::rename(enrdat,c("FORM_RUN" = "Cohort",
"STUDENT_NUMBER" = "Student.ID",
"FIRSTNAME" = "Student.Firstname",
"SURNAME" = "Student.Lastname",
"EMAIL_ADDRESS" = "Student.Email",
"CLASS" = "Class",
"TEACHER_TITLE" = "Teacher.Title",
"TEACHER_FIRSTNAME" = "Teacher.Firstname",
"TEACHER_SURNAME" = "Teacher.Lastname",
"TEACHER_EMAIL" = "Teacher.Email",
"class.code" = "Class.Code"))
enrdat$REG_NUMBER <- NULL
studat <- read.csv(student.info.data.path)
studat <- plyr::rename(studat, c("Student.." = "Student.ID",
"Email.Address" = "Student.Email",
"Firstname" = "Student.Firstname",
"Lastname" = "Student.Lastname",
"Firstname.Lastname" = "Student.Name",
"LASTNAME.Firstname" = "Student.Sortname",
"House" = "House",
"Gender" = "Gender",
"Form" = "Cohort",
"Tutor...Roll.Class" = "Tutor.Group"))
outdat <- merge(enrdat, studat[,c("Student.ID", "Student.Name", "Student.Sortname","House","Gender","Tutor.Group")], all.x = T, by = "Student.ID")
outdat$Year <- as.numeric(gsub("[0-9]{4} Year ", "", outdat$Cohort))
outdat$Tutor.Group <- gsub("Tutor Group ","", outdat$Tutor.Group)
write.csv(outdat, file = output.file, row.names = FALSE)
}
makeEffortTrackingUpload <- function(enrolment.data.path,
student.info.data.path,
output.file = "effort.tracking.upload.csv") {
enrdat <- read.csv(enrolment.data.path)
enrdat <- plyr::rename(enrdat,c("FORM_RUN" = "Cohort",
"STUDENT_NUMBER" = "Student.ID",
"FIRSTNAME" = "Student.Firstname",
"SURNAME" = "Student.Lastname",
"EMAIL_ADDRESS" = "Student.Email",
"CLASS" = "Class",
"TEACHER_TITLE" = "Teacher.Title",
"TEACHER_FIRSTNAME" = "Teacher.Firstname",
"TEACHER_SURNAME" = "Teacher.Lastname",
"TEACHER_EMAIL" = "Teacher.Email",
"class.code" = "Class.Code"))
enrdat$REG_NUMBER <- NULL
studat <- read.csv(student.info.data.path)
studat <- plyr::rename(studat, c("Student.." = "Student.ID",
"Email.Address" = "Student.Email",
"Firstname" = "Student.Firstname",
"Lastname" = "Student.Lastname",
"Firstname.Lastname" = "Student.Name",
"LASTNAME.Firstname" = "Student.Sortname",
"House" = "House",
"Gender" = "Gender",
"Form" = "Cohort",
"Tutor...Roll.Class" = "Tutor.Group"))
outdat <- merge(enrdat, studat[,c("Student.ID", "Student.Name", "Student.Sortname","House","Gender","Tutor.Group")], all.x = T, by = "Student.ID")
outdat$Year <- as.numeric(gsub("[0-9]{4} Year ", "", outdat$Cohort))
outdat$Tutor.Group <- gsub("Tutor Group ","", outdat$Tutor.Group)
write.csv(outdat, file = output.file, row.names = FALSE)
}
makeEffortTrackingUpload(enrolment.data.path = enrolment.data.path, student.info.data.path = student.info.data.path, output.file = paste0(datdir, "effort.tracking.upload.csv"))
toclip(unique(enrolmentData[enrolmentData$Year == 1, "Teacher.Email"]))
toclip(unique(enrolmentData[enrolmentData$Year == 11, "Teacher.Email"]))
unique(enrolmentData[enrolmentData$Year == 1, "Teacher.Email"]))
unique(enrolmentData[enrolmentData$Year == 1, "Teacher.Email"])
unique(enrolmentData[enrolmentData$Year == 11, "Teacher.Email"])
unique(enrolmentData[enrolmentData$Year == 11, c("Teacher.Email")])
unique(enrolmentData$Year)
unique(enrolmentData[enrolmentData$Year  == 11,])
unique(enrolmentData[enrolmentData$Year  == 11,]$Teacher.email)
toclip(unique(enrolmentData[enrolmentData$Year  == 11,]$Teacher.email))
semails <- unique(enrolmentData[enrolmentData$Year == 1,]$Student.email)
semails
semails <- unique(enrolmentData[enrolmentData$Year == 11,]$Student.email)
semails
paste(semails, sep = ";")
to <- ""
for (m in semails) {to <- paste(to, m, sep = ";")}
to
toclip(to)
semails
grep("\'",semails)
semails[grep("\'",semails)]
?I
